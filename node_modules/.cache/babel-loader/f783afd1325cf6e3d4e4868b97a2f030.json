{"ast":null,"code":"var _jsxFileName = \"/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const [answers, setAnswers] = React.useState(props.answers);\n\n  function handleAnswerClick(event) {\n    console.log(event.target.id);\n  }\n\n  const answerElements = props.answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"question-answer\",\n    onClick: handleAnswerClick,\n    dangerouslySetInnerHTML: {\n      __html: answer.text\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question-header\",\n      dangerouslySetInnerHTML: {\n        __html: props.question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-choices\",\n      children: answerElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"goFEvJkK/wrHqBrZlZDuM7nLw18=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","nanoid","Question","props","answers","setAnswers","useState","handleAnswerClick","event","console","log","target","id","answerElements","map","answer","__html","text","question"],"sources":["/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/Question.js"],"sourcesContent":["import React from 'react'\nimport {nanoid} from 'nanoid'\n\nexport default function Question(props) {\n\n    const [answers, setAnswers] = React.useState(props.answers)\n\n    function handleAnswerClick(event){\n        console.log(event.target.id)\n    }\n\n    const answerElements = props.answers.map(answer => (\n        <button className=\"question-answer\"\n                \n                onClick={handleAnswerClick}\n                dangerouslySetInnerHTML={{__html: answer.text}}\n        >\n        </button>\n    ))\n\n    return (\n        <div className=\"question\">\n            <h2 className=\"question-header\"\n                dangerouslySetInnerHTML={{__html: props.question}}\n            >\n            </h2>\n            <div className=\"question-choices\">\n                {answerElements}\n            </div>\n        </div>\n    )\n} "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,KAAK,CAACM,QAAN,CAAeH,KAAK,CAACC,OAArB,CAA9B;;EAEA,SAASG,iBAAT,CAA2BC,KAA3B,EAAiC;IAC7BC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,EAAzB;EACH;;EAED,MAAMC,cAAc,GAAGV,KAAK,CAACC,OAAN,CAAcU,GAAd,CAAkBC,MAAM,iBAC3C;IAAQ,SAAS,EAAC,iBAAlB;IAEQ,OAAO,EAAER,iBAFjB;IAGQ,uBAAuB,EAAE;MAACS,MAAM,EAAED,MAAM,CAACE;IAAhB;EAHjC;IAAA;IAAA;IAAA;EAAA,QADmB,CAAvB;EASA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAI,SAAS,EAAC,iBAAd;MACI,uBAAuB,EAAE;QAACD,MAAM,EAAEb,KAAK,CAACe;MAAf;IAD7B;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,kBAAf;MAAA,UACKL;IADL;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GA5BuBX,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}