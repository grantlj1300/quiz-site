{"ast":null,"code":"var _jsxFileName = \"/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/PlayScreen.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayScreen(props) {\n  _s();\n\n  const {\n    playingGame,\n    toStartScreen,\n    toEndGame,\n    totalCorrect\n  } = props;\n  const [allQuestions, setAllQuestions] = React.useState([]);\n\n  function generateNewQuestions(questionsArray) {\n    let questions = [];\n\n    for (let i = 0; i < questionsArray.length; i++) {\n      let answers = [...questionsArray[i].incorrect_answers, questionsArray[i].correct_answer];\n      let answersArray = answers.map(answer => ({\n        id: nanoid(),\n        text: answer,\n        selected: false,\n        correct: false\n      }));\n      answersArray[answersArray.length - 1].correct = true;\n\n      for (let i = answersArray.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = answersArray[i];\n        answersArray[i] = answersArray[j];\n        answersArray[j] = temp;\n      }\n\n      questions[i] = {\n        id: i,\n        answers: answersArray,\n        question: questionsArray[i].question\n      };\n    }\n\n    setAllQuestions(questions);\n  }\n\n  const questionElements = allQuestions.map(questionElement => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: questionElement.id,\n      question: questionElement.question,\n      handleAnswerClick: handleAnswerClick,\n      answers: questionElement.answers,\n      gameState: gameState\n    }, questionElement.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"play-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: questionElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), playingGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: toEndGame,\n      children: \"Check Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), !playingGame && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-again-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"score\",\n        children: [\"You scored \", totalCorrect, \"/\", questionElements.length, \" correct answers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-again-button\",\n        onClick: toStartScreen,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlayScreen, \"jlYn0lwZ2s6RQTHexVgZ8ugHNAo=\");\n\n_c = PlayScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayScreen\");","map":{"version":3,"names":["PlayScreen","props","playingGame","toStartScreen","toEndGame","totalCorrect","allQuestions","setAllQuestions","React","useState","generateNewQuestions","questionsArray","questions","i","length","answers","incorrect_answers","correct_answer","answersArray","map","answer","id","nanoid","text","selected","correct","j","Math","floor","random","temp","question","questionElements","questionElement","handleAnswerClick","gameState"],"sources":["/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/PlayScreen.js"],"sourcesContent":["export default function PlayScreen(props) {\n\n    const {playingGame, \n        toStartScreen, toEndGame, totalCorrect} = props\n\n    const [allQuestions, setAllQuestions] = React.useState([])\n\n    function generateNewQuestions(questionsArray){\n        let questions = []\n        for (let i = 0; i < questionsArray.length; i++) {\n            let answers = [...questionsArray[i].incorrect_answers, questionsArray[i].correct_answer]\n            let answersArray = answers.map(answer => (\n                {\n                    id: nanoid(),\n                    text: answer,\n                    selected: false,\n                    correct: false\n                }\n            ))\n            answersArray[answersArray.length - 1].correct = true\n            for (let i = answersArray.length - 1; i > 0; i--) {\n                let j = Math.floor(Math.random() * (i + 1));\n                let temp = answersArray[i];\n                answersArray[i] = answersArray[j];\n                answersArray[j] = temp;\n            }\n            questions[i] = \n            {\n                id: i,\n                answers: answersArray,\n                question: questionsArray[i].question\n            }\n        }\n        setAllQuestions(questions)\n    }\n\n\tconst questionElements = allQuestions.map(questionElement => {\n\t\treturn <Question \n\t\t\tkey={questionElement.id}\n\t\t\tid={questionElement.id}\n\t\t\tquestion={questionElement.question}\n\t\t\thandleAnswerClick={handleAnswerClick}\n\t\t\tanswers={questionElement.answers}\n\t\t\tgameState={gameState}\n\t\t/>\n\t})\n\n    return (\n        <div className=\"play-screen\">\n            <div className=\"question-container\">\n                {questionElements}\n            </div>\n            {\n            playingGame && \n            <button \n                className=\"submit-button\" \n                onClick={toEndGame}\n            >Check Answers\n            </button>\n            }\n            {\n            !playingGame && \n            <div className=\"play-again-container\">\n                <h2 className=\"score\">\n                    You scored {totalCorrect}/{questionElements.length} correct answers\n                </h2>\n                <button \n                    className=\"play-again-button\" \n                    onClick={toStartScreen}\n                >Play Again\n                </button>\n            </div>\n            }\n        </div>\n    )\n} "],"mappings":"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"},"metadata":{},"sourceType":"module"}