{"ast":null,"code":"var _jsxFileName = \"/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/Question.js\";\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  function answerStyle(answer) {\n    if (props.gameState === \"playingGame\") {\n      return answer.selected ? \" selected\" : \"\";\n    } else if (props.gameState === \"endGame\") {}\n  }\n\n  const answerElements = props.answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `question-answer${answer.selected ? \" selected\" : \"\"}`,\n    id: answer.id,\n    onClick: props.gameState === \"playingGame\" ? event => props.handleAnswerClick(event, props.id) : undefined,\n    dangerouslySetInnerHTML: {\n      __html: answer.text\n    }\n  }, answer.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question-header\",\n      dangerouslySetInnerHTML: {\n        __html: props.question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-choices\",\n      children: answerElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","nanoid","Question","props","answerStyle","answer","gameState","selected","answerElements","answers","map","id","event","handleAnswerClick","undefined","__html","text","question"],"sources":["/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/Question.js"],"sourcesContent":["import React from 'react'\nimport {nanoid} from 'nanoid'\n\nexport default function Question(props) {\n\n    function answerStyle(answer){\n        if(props.gameState === \"playingGame\"){\n            return answer.selected ? \" selected\" : \"\"\n        }\n        else if(props.gameState === \"endGame\"){\n\n        }\n    }\n\n    const answerElements = props.answers.map(answer => (\n        <button className={`question-answer${answer.selected ? \" selected\" : \"\"}`}\n                key={answer.id}\n                id={answer.id}\n                onClick={props.gameState === \"playingGame\" ? \n                (event) => props.handleAnswerClick(event, props.id) : undefined}\n                dangerouslySetInnerHTML={{__html: answer.text}}\n        >\n        </button>\n    ))\n\n    return (\n        <div className=\"question\">\n            <h2 className=\"question-header\"\n                dangerouslySetInnerHTML={{__html: props.question}}\n            >\n            </h2>\n            <div className=\"question-choices\">\n                {answerElements}\n            </div>\n        </div>\n    )\n} "],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAEpC,SAASC,WAAT,CAAqBC,MAArB,EAA4B;IACxB,IAAGF,KAAK,CAACG,SAAN,KAAoB,aAAvB,EAAqC;MACjC,OAAOD,MAAM,CAACE,QAAP,GAAkB,WAAlB,GAAgC,EAAvC;IACH,CAFD,MAGK,IAAGJ,KAAK,CAACG,SAAN,KAAoB,SAAvB,EAAiC,CAErC;EACJ;;EAED,MAAME,cAAc,GAAGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkBL,MAAM,iBAC3C;IAAQ,SAAS,EAAG,kBAAiBA,MAAM,CAACE,QAAP,GAAkB,WAAlB,GAAgC,EAAG,EAAxE;IAEQ,EAAE,EAAEF,MAAM,CAACM,EAFnB;IAGQ,OAAO,EAAER,KAAK,CAACG,SAAN,KAAoB,aAApB,GACRM,KAAD,IAAWT,KAAK,CAACU,iBAAN,CAAwBD,KAAxB,EAA+BT,KAAK,CAACQ,EAArC,CADF,GAC6CG,SAJ9D;IAKQ,uBAAuB,EAAE;MAACC,MAAM,EAAEV,MAAM,CAACW;IAAhB;EALjC,GACaX,MAAM,CAACM,EADpB;IAAA;IAAA;IAAA;EAAA,QADmB,CAAvB;EAWA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAI,SAAS,EAAC,iBAAd;MACI,uBAAuB,EAAE;QAACI,MAAM,EAAEZ,KAAK,CAACc;MAAf;IAD7B;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,kBAAf;MAAA,UACKT;IADL;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;KAjCuBN,Q"},"metadata":{},"sourceType":"module"}