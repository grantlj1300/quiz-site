{"ast":null,"code":"var _jsxFileName = \"/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question(props) {\n  _s();\n\n  const {\n    questionText,\n    questionAnswers,\n    gameState\n  } = props;\n  const [question, setQuestion] = React.useState();\n\n  function answerStyle(answer) {\n    if (props.gameState === \"playingGame\") {\n      return answer.selected ? \" selected\" : \"\";\n    } else if (props.gameState === \"endGame\") {\n      if (answer.correct) {\n        return \" correct\";\n      } else if (answer.selected) {\n        return \" incorrect\";\n      } else {\n        return \" blank\";\n      }\n    }\n  }\n\n  const answerElements = props.answers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `question-answer${answerStyle(answer)}`,\n    id: answer.id,\n    onClick: props.gameState === \"playingGame\" ? event => props.handleAnswerClick(event, props.id) : undefined,\n    dangerouslySetInnerHTML: {\n      __html: answer.text\n    }\n  }, answer.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this));\n\n  function generateNewQuestions(gameQuestionsDirty) {\n    let questions = [];\n\n    for (let i = 0; i < gameQuestionsDirty.length; i++) {\n      let answers = [...gameQuestionsDirty[i].incorrect_answers, gameQuestionsDirty[i].correct_answer];\n      let answersArray = answers.map(answer => ({\n        id: nanoid(),\n        text: answer,\n        selected: false,\n        correct: false\n      }));\n      answersArray[answersArray.length - 1].correct = true;\n\n      for (let i = answersArray.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = answersArray[i];\n        answersArray[i] = answersArray[j];\n        answersArray[j] = temp;\n      }\n\n      questions[i] = {\n        id: i,\n        answers: answersArray,\n        question: gameQuestionsDirty[i].question\n      };\n    }\n\n    setAllQuestions(questions);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question-header\",\n      dangerouslySetInnerHTML: {\n        __html: props.question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-choices\",\n      children: answerElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"d+UijU6LSSOIzAeV7YNYUV88yk8=\");\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","nanoid","Question","props","questionText","questionAnswers","gameState","question","setQuestion","useState","answerStyle","answer","selected","correct","answerElements","answers","map","id","event","handleAnswerClick","undefined","__html","text","generateNewQuestions","gameQuestionsDirty","questions","i","length","incorrect_answers","correct_answer","answersArray","j","Math","floor","random","temp","setAllQuestions"],"sources":["/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/Question.js"],"sourcesContent":["import React from 'react'\nimport {nanoid} from 'nanoid'\n\nexport default function Question(props) {\n\n    const {questionText, questionAnswers, gameState} = props\n\n    const [question, setQuestion] = React.useState()\n\n    function answerStyle(answer){\n        if(props.gameState === \"playingGame\"){\n            return answer.selected ? \" selected\" : \"\"\n        }\n        else if(props.gameState === \"endGame\"){\n            if(answer.correct){\n                return \" correct\"\n            }\n            else if(answer.selected){\n                return \" incorrect\"\n            }\n            else {\n                return \" blank\"\n            }\n        }\n    }\n\n    const answerElements = props.answers.map(answer => (\n        <button className={`question-answer${answerStyle(answer)}`}\n                key={answer.id}\n                id={answer.id}\n                onClick={props.gameState === \"playingGame\" ? \n                (event) => props.handleAnswerClick(event, props.id) : undefined}\n                dangerouslySetInnerHTML={{__html: answer.text}}\n        >\n        </button>\n    ))\n\n    function generateNewQuestions(gameQuestionsDirty){\n        let questions = []\n        for (let i = 0; i < gameQuestionsDirty.length; i++) {\n            let answers = [...gameQuestionsDirty[i].incorrect_answers, gameQuestionsDirty[i].correct_answer]\n            let answersArray = answers.map(answer => (\n                {\n                    id: nanoid(),\n                    text: answer,\n                    selected: false,\n                    correct: false\n                }\n            ))\n            answersArray[answersArray.length - 1].correct = true\n            for (let i = answersArray.length - 1; i > 0; i--) {\n                let j = Math.floor(Math.random() * (i + 1));\n                let temp = answersArray[i];\n                answersArray[i] = answersArray[j];\n                answersArray[j] = temp;\n            }\n            questions[i] = \n            {\n                id: i,\n                answers: answersArray,\n                question: gameQuestionsDirty[i].question\n            }\n        }\n        setAllQuestions(questions)\n    }\n\n    return (\n        <div className=\"question\">\n            <h2 className=\"question-header\"\n                dangerouslySetInnerHTML={{__html: props.question}}\n            >\n            </h2>\n            <div className=\"question-choices\">\n                {answerElements}\n            </div>\n        </div>\n    )\n} "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAM;IAACC,YAAD;IAAeC,eAAf;IAAgCC;EAAhC,IAA6CH,KAAnD;EAEA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACS,QAAN,EAAhC;;EAEA,SAASC,WAAT,CAAqBC,MAArB,EAA4B;IACxB,IAAGR,KAAK,CAACG,SAAN,KAAoB,aAAvB,EAAqC;MACjC,OAAOK,MAAM,CAACC,QAAP,GAAkB,WAAlB,GAAgC,EAAvC;IACH,CAFD,MAGK,IAAGT,KAAK,CAACG,SAAN,KAAoB,SAAvB,EAAiC;MAClC,IAAGK,MAAM,CAACE,OAAV,EAAkB;QACd,OAAO,UAAP;MACH,CAFD,MAGK,IAAGF,MAAM,CAACC,QAAV,EAAmB;QACpB,OAAO,YAAP;MACH,CAFI,MAGA;QACD,OAAO,QAAP;MACH;IACJ;EACJ;;EAED,MAAME,cAAc,GAAGX,KAAK,CAACY,OAAN,CAAcC,GAAd,CAAkBL,MAAM,iBAC3C;IAAQ,SAAS,EAAG,kBAAiBD,WAAW,CAACC,MAAD,CAAS,EAAzD;IAEQ,EAAE,EAAEA,MAAM,CAACM,EAFnB;IAGQ,OAAO,EAAEd,KAAK,CAACG,SAAN,KAAoB,aAApB,GACRY,KAAD,IAAWf,KAAK,CAACgB,iBAAN,CAAwBD,KAAxB,EAA+Bf,KAAK,CAACc,EAArC,CADF,GAC6CG,SAJ9D;IAKQ,uBAAuB,EAAE;MAACC,MAAM,EAAEV,MAAM,CAACW;IAAhB;EALjC,GACaX,MAAM,CAACM,EADpB;IAAA;IAAA;IAAA;EAAA,QADmB,CAAvB;;EAWA,SAASM,oBAAT,CAA8BC,kBAA9B,EAAiD;IAC7C,IAAIC,SAAS,GAAG,EAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,kBAAkB,CAACG,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;MAChD,IAAIX,OAAO,GAAG,CAAC,GAAGS,kBAAkB,CAACE,CAAD,CAAlB,CAAsBE,iBAA1B,EAA6CJ,kBAAkB,CAACE,CAAD,CAAlB,CAAsBG,cAAnE,CAAd;MACA,IAAIC,YAAY,GAAGf,OAAO,CAACC,GAAR,CAAYL,MAAM,KACjC;QACIM,EAAE,EAAEhB,MAAM,EADd;QAEIqB,IAAI,EAAEX,MAFV;QAGIC,QAAQ,EAAE,KAHd;QAIIC,OAAO,EAAE;MAJb,CADiC,CAAlB,CAAnB;MAQAiB,YAAY,CAACA,YAAY,CAACH,MAAb,GAAsB,CAAvB,CAAZ,CAAsCd,OAAtC,GAAgD,IAAhD;;MACA,KAAK,IAAIa,CAAC,GAAGI,YAAY,CAACH,MAAb,GAAsB,CAAnC,EAAsCD,CAAC,GAAG,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;QAC9C,IAAIK,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBR,CAAC,GAAG,CAArB,CAAX,CAAR;QACA,IAAIS,IAAI,GAAGL,YAAY,CAACJ,CAAD,CAAvB;QACAI,YAAY,CAACJ,CAAD,CAAZ,GAAkBI,YAAY,CAACC,CAAD,CAA9B;QACAD,YAAY,CAACC,CAAD,CAAZ,GAAkBI,IAAlB;MACH;;MACDV,SAAS,CAACC,CAAD,CAAT,GACA;QACIT,EAAE,EAAES,CADR;QAEIX,OAAO,EAAEe,YAFb;QAGIvB,QAAQ,EAAEiB,kBAAkB,CAACE,CAAD,CAAlB,CAAsBnB;MAHpC,CADA;IAMH;;IACD6B,eAAe,CAACX,SAAD,CAAf;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAI,SAAS,EAAC,iBAAd;MACI,uBAAuB,EAAE;QAACJ,MAAM,EAAElB,KAAK,CAACI;MAAf;IAD7B;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,kBAAf;MAAA,UACKO;IADL;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GA1EuBZ,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}