{"ast":null,"code":"var _jsxFileName = \"/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/PlayScreen.js\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayScreen(props) {\n  const {\n    playingGame,\n    toStartScreen,\n    toEndGame,\n    totalCorrect,\n    gameQuestionsDirty\n  } = props; //const [allQuestions, setAllQuestions] = React.useState([])\n\n  const questionElements = gameQuestionsDirty.map((questionElement, index) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      id: index,\n      question: questionElement.question,\n      handleAnswerClick: handleAnswerClick,\n      answers: [...questionElement.incorrect_answers, questionElement.correct_answer],\n      gameState: gameState\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"play-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: questionElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), playingGame && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: toEndGame,\n      children: \"Check Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), !playingGame && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-again-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"score\",\n        children: [\"You scored \", totalCorrect, \"/\", questionElements.length, \" correct answers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-again-button\",\n        onClick: toStartScreen,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = PlayScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayScreen\");","map":{"version":3,"names":["Question","PlayScreen","props","playingGame","toStartScreen","toEndGame","totalCorrect","gameQuestionsDirty","questionElements","map","questionElement","index","question","handleAnswerClick","incorrect_answers","correct_answer","gameState","length"],"sources":["/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/components/PlayScreen.js"],"sourcesContent":["import Question from \"./Question\"\n\nexport default function PlayScreen(props) {\n\n    const {playingGame, \n        toStartScreen, toEndGame, totalCorrect, gameQuestionsDirty} = props\n\n    //const [allQuestions, setAllQuestions] = React.useState([])\n\n\n\n\tconst questionElements = gameQuestionsDirty.map((questionElement, index) => {\n\t\treturn <Question \n\t\t\tkey={index}\n\t\t\tid={index}\n\t\t\tquestion={questionElement.question}\n\t\t\thandleAnswerClick={handleAnswerClick}\n\t\t\tanswers={[...questionElement.incorrect_answers, questionElement.correct_answer]}\n\t\t\tgameState={gameState}\n\t\t/>\n\t})\n\n    return (\n        <div className=\"play-screen\">\n            <div className=\"question-container\">\n                {questionElements}\n            </div>\n            {\n            playingGame && \n            <button \n                className=\"submit-button\" \n                onClick={toEndGame}\n            >Check Answers\n            </button>\n            }\n            {\n            !playingGame && \n            <div className=\"play-again-container\">\n                <h2 className=\"score\">\n                    You scored {totalCorrect}/{questionElements.length} correct answers\n                </h2>\n                <button \n                    className=\"play-again-button\" \n                    onClick={toStartScreen}\n                >Play Again\n                </button>\n            </div>\n            }\n        </div>\n    )\n} "],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAEtC,MAAM;IAACC,WAAD;IACFC,aADE;IACaC,SADb;IACwBC,YADxB;IACsCC;EADtC,IAC4DL,KADlE,CAFsC,CAKtC;;EAIH,MAAMM,gBAAgB,GAAGD,kBAAkB,CAACE,GAAnB,CAAuB,CAACC,eAAD,EAAkBC,KAAlB,KAA4B;IAC3E,oBAAO,QAAC,QAAD;MAEN,EAAE,EAAEA,KAFE;MAGN,QAAQ,EAAED,eAAe,CAACE,QAHpB;MAIN,iBAAiB,EAAEC,iBAJb;MAKN,OAAO,EAAE,CAAC,GAAGH,eAAe,CAACI,iBAApB,EAAuCJ,eAAe,CAACK,cAAvD,CALH;MAMN,SAAS,EAAEC;IANL,GACDL,KADC;MAAA;MAAA;MAAA;IAAA,QAAP;EAQA,CATwB,CAAzB;EAWG,oBACI;IAAK,SAAS,EAAC,aAAf;IAAA,wBACI;MAAK,SAAS,EAAC,oBAAf;MAAA,UACKH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,EAKIL,WAAW,iBACX;MACI,SAAS,EAAC,eADd;MAEI,OAAO,EAAEE,SAFb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,EAaI,CAACF,WAAD,iBACA;MAAK,SAAS,EAAC,sBAAf;MAAA,wBACI;QAAI,SAAS,EAAC,OAAd;QAAA,0BACgBG,YADhB,OAC+BE,gBAAgB,CAACS,MADhD;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QACI,SAAS,EAAC,mBADd;QAEI,OAAO,EAAEb,aAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH;KAhDuBH,U"},"metadata":{},"sourceType":"module"}