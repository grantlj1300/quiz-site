{"ast":null,"code":"var _jsxFileName = \"/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Question from './components/Question';\nimport StartScreen from './components/StartScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // Grab category: id data from API once\n  const [categories, setCategories] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://opentdb.com/api_category.php\").then(res => res.json()).then(data => setCategories(data.trivia_categories));\n  }, []); // Game state tracks which screen to render\n\n  const [gameState, setGameState] = React.useState(\"startGame\");\n\n  function toGamePlayScreen() {\n    let url;\n    let {\n      numQuestions,\n      category,\n      difficulty,\n      type\n    } = formData;\n    numQuestions = `amount=${numQuestions}`;\n    category = category === 0 ? \"\" : `&category=${category}`;\n    difficulty = difficulty === \"\" ? \"\" : `&difficulty=${difficulty}`;\n    type = type === \"\" ? \"\" : `&type=${type}`;\n    url = `https://opentdb.com/api.php?${numQuestions}\n\t\t\t${category}${difficulty}${type}`;\n    console.log(url);\n    fetch(url).then(res => res.json()).then(data => generateNewQuestions(data.results));\n    setGameState(\"playGame\");\n  }\n\n  function toStartScreen() {\n    setGameState(\"startGame\");\n  } // React.useEffect(() => {\n  // \tconst url = `https://opentdb.com/api.php?\n  // \t\t\t\t\tamount=${formData.numQuestions}\n  // \t\t\t\t\t${\"&category=\"}`\n  // \tfetch(\"https://opentdb.com/api.php?amount=3\")\n  // \t\t.then(res => res.json())\n  // \t\t.then(data => generateNewQuestions(data.results))\n  // }, [])\n\n\n  function generateNewQuestions(questionsArray) {\n    console.log(questionsArray);\n    setAllQuestions(questionsArray);\n  }\n\n  const [allQuestions, setAllQuestions] = React.useState([]);\n  const questionElements = allQuestions.map(questionElement => /*#__PURE__*/_jsxDEV(Question, {\n    question: questionElement.question,\n    answers: [...questionElement.incorrect_answers, questionElement.correct_answer],\n    correct_answer: questionElement.correct_answer\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this));\n  const categoryOptions = categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: category.id,\n    children: category.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this));\n  const [formData, setFormData] = React.useState({\n    numQuestions: \"\",\n    category: 0,\n    difficulty: \"\",\n    type: \"\"\n  });\n\n  function handleFormChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => {\n      return { ...prevFormData,\n        [name]: value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [gameState === \"startGame\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n      formData: formData,\n      handleFormChange: handleFormChange,\n      categoryOptions: categoryOptions,\n      toGamePlayScreen: toGamePlayScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), gameState === \"playGame\" && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"play-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: questionElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: toStartScreen,\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"0AWOkLOHGIqWLS3+bH/EFjdZUL0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","nanoid","Question","StartScreen","App","categories","setCategories","useState","useEffect","fetch","then","res","json","data","trivia_categories","gameState","setGameState","toGamePlayScreen","url","numQuestions","category","difficulty","type","formData","console","log","generateNewQuestions","results","toStartScreen","questionsArray","setAllQuestions","allQuestions","questionElements","map","questionElement","question","incorrect_answers","correct_answer","categoryOptions","id","name","setFormData","handleFormChange","event","value","target","prevFormData"],"sources":["/Users/grantlj/Documents/React/FreeCodeCamp/quiz-site/src/App.js"],"sourcesContent":["import React from 'react'\nimport {nanoid} from 'nanoid'\nimport Question from './components/Question'\nimport StartScreen from './components/StartScreen'\n\nexport default function App() {\n\n\t// Grab category: id data from API once\n\tconst [categories, setCategories] = React.useState([])\n\tReact.useEffect(() => {\n\t\tfetch(\"https://opentdb.com/api_category.php\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => setCategories(data.trivia_categories))\n\t}, [])\n\n\t// Game state tracks which screen to render\n\tconst [gameState, setGameState] = React.useState(\"startGame\")\n\n\tfunction toGamePlayScreen(){\n\t\tlet url\n\t\tlet {numQuestions, category, difficulty, type} = formData\n\t\tnumQuestions = `amount=${numQuestions}`\n\t\tcategory = category === 0 ? \"\" : `&category=${category}`\n\t\tdifficulty = difficulty === \"\" ? \"\" : `&difficulty=${difficulty}`\n\t\ttype = type === \"\" ? \"\" : `&type=${type}`\n\t\turl = `https://opentdb.com/api.php?${numQuestions}\n\t\t\t${category}${difficulty}${type}`\n\t\tconsole.log(url)\n\t\tfetch(url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => generateNewQuestions(data.results))\n\t\tsetGameState(\"playGame\")\n\t}\n\n\tfunction toStartScreen(){\n\t\tsetGameState(\"startGame\")\n\t}\n\n\t// React.useEffect(() => {\n\n\t// \tconst url = `https://opentdb.com/api.php?\n\t// \t\t\t\t\tamount=${formData.numQuestions}\n\t// \t\t\t\t\t${\"&category=\"}`\n\t// \tfetch(\"https://opentdb.com/api.php?amount=3\")\n\t// \t\t.then(res => res.json())\n\t// \t\t.then(data => generateNewQuestions(data.results))\n\t// }, [])\n\n\tfunction generateNewQuestions(questionsArray){\n\t\tconsole.log(questionsArray)\n\t\tsetAllQuestions(questionsArray)\n\t}\n\n\tconst [allQuestions, setAllQuestions] = React.useState([])\n\n\tconst questionElements = allQuestions.map(questionElement => (\n\t\t<Question \n\t\t\tkey={nanoid()}\n\t\t\tquestion={questionElement.question}\n\t\t\tanswers={[...questionElement.incorrect_answers, questionElement.correct_answer]}\n\t\t\tcorrect_answer={questionElement.correct_answer}\n\t\t/>\n\t))\n\n\tconst categoryOptions = categories.map(category => (\n\t\t<option value={category.id}>{category.name}</option>\n\t))\n\n\tconst [formData, setFormData] = React.useState(\n\t\t{\n\t\t\tnumQuestions: \"\",\n\t\t\tcategory: 0,\n\t\t\tdifficulty: \"\",\n\t\t\ttype: \"\"\n\t\t}\n\t)\n\n\tfunction handleFormChange(event) {\n\t\tconst {name, value} = event.target\n\t\tsetFormData(prevFormData => {\n\t\t\treturn {\n\t\t\t\t...prevFormData,\n\t\t\t\t[name]: value\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className=\"main-container\">\n\t\t\t{(gameState === \"startGame\") && \n\t\t\t<StartScreen \n\t\t\t\tformData={formData}\n\t\t\t\thandleFormChange={handleFormChange}\n\t\t\t\tcategoryOptions={categoryOptions}\n\t\t\t\ttoGamePlayScreen={toGamePlayScreen}\n\t\t\t/>}\n\t\t\t{(gameState === \"playGame\") && \n\t\t\t<form className=\"play-screen\">\n\t\t\t\t<div className=\"question-container\">\n\t\t\t\t\t{questionElements}\n\t\t\t\t</div>\n\t\t\t\t<button className=\"submit-button\" onClick={toStartScreen}>Check Answers</button>\n\t\t\t</form>}\n\t\t</div>\n\t)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}